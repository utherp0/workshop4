apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: layer2-a
    instance: instance1
    app.kubernetes.io/part-of: layers
    app.openshift.io/runtime: nodejs
  name: layer2-a-instance1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: layer2-a
      instance: instance1
  template:
    metadata:
      labels:
        app: layer2-a
        instance: instance1
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - env:
        image: quay.io/marrober/layers:latest
        imagePullPolicy: Always
        name: layer2-a
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
          - name: THIS_LAYER_NAME
            value: layer2-a
          - name: VERSION_ID
            value: instance-1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: layer2-a
    instance: instance2
    app.kubernetes.io/part-of: layers
    app.openshift.io/runtime: nodejs
  name: layer2-a-instance2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: layer2-a
      instance: instance2
  template:
    metadata:
      labels:
        app: layer2-a
        instance: instance2
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - env:
        image: quay.io/marrober/layers:latest
        imagePullPolicy: Always
        name: layer2-a
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
          - name: THIS_LAYER_NAME
            value: layer2-a
          - name: VERSION_ID
            value: instance-2
---
apiVersion: v1
kind: Service
metadata:
  name: layer2-a
  labels:
    app: layer2-a
spec:
  ports:
  - name: http
    port: 8080
  selector:
    app: layer2-a